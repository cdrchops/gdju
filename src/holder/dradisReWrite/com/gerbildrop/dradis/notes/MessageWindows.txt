package com.gerbildrop.dradis.messaging;

//import com.gerbildrop.austin.dradis.oglfont.Font;
import com.gerbildrop.dradis.messaging.MessageWindow;

import javax.media.opengl.GL;
import javax.media.opengl.GLAutoDrawable;
import java.awt.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 * @author timo
 * @version ${1.1}
 * @since Oct 14, 2006 2:10:12 PM
 */
public class MessageWindows {
    private List messages = new ArrayList();

    public MessageWindow checkCollisions(Rectangle r2) {
        MessageWindow messageWindow = null;
        boolean flagRemove = false;

        for (Iterator iterator = messages.iterator(); iterator.hasNext();) {
            messageWindow= (MessageWindow) iterator.next();
            if (messageWindow.checkCollisions(r2)) {
                if (messageWindow.getMinMessageWindow().intersects(r2)) {
                    messageWindow.setMinimized(true);
                } else if (messageWindow.getCloseMessageWindow().intersects(r2)) {
                    flagRemove = true;
                } else {
                    return messageWindow;
                }
            }
        }

        if (flagRemove) {
            messages.remove(messageWindow);
        }
        return null;
    }

    public void showMessages(GL gl, GLAutoDrawable drawable) {
        for (Iterator iterator = messages.iterator(); iterator.hasNext();) {
            MessageWindow messageWindow = (MessageWindow) iterator.next();
            if (messageWindow.showMessage()) {
                com.gerbildrop.austin.dradis.imaging.ImageUtil.drawImage(gl, messageWindow.getMessageFrame(), 200, 100, true);
                gl.glColor3ub((byte)255, (byte)255, (byte)255);

//                Font.display(drawable, 210, 200, messageWindow.getMessageTitle().toString());
//                Font.display(drawable, 200, 185, messageWindow.getMessage().toString());
            }
        }
    }

    public void typeMessage(Rectangle r2, String message) {
        MessageWindow mw = checkCollisions(r2);
        mw.setMessage(new StringBuffer(message));
        mw.addMessage(message);
    }

    public String getMessage(Rectangle r2) {
        MessageWindow mw = checkCollisions(r2);

        return mw.getMessage().toString();
    }

    public void newMessage() {
        MessageWindow mw = new MessageWindow();
        mw.setShowMessage(true);
        messages.add(mw);
    }
}
