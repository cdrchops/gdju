CameraManager
CameraFactory
CameraInputHandler
RotationalCameraInputHandler

CameraManager
maintains the current camera and does all updates, notifying the display that it has changed
basically does what the CameraFactory does.
stores a list of ExtensibleGamePlayCamera objects referenced by the CameraView object as the key
    this eliminates multiple cameras from being made that do the same thing

CameraInputHandler
    base class for RotationalCameraInputHandler

RotationalCameraInputHandler
    handles moving the camera around a fixed object... fixed meaning the object we want to look at.
    camera movements should rotate the camera around that object using the keypad for the settings
    8 up
    2 down
    6 right
    4 left
    5 reset the camera
    pageup zoom in
    pagedown zoom out



//        display.getRenderer().setCamera( cam );

        //test camera from another game
//        Camera cam = display.getRenderer().createCamera( display.getWidth(),
//                     display.getHeight() );
//
//        cam.setLocation(new Vector3f(-4f, 5, -4f));
//        cam.lookAt(new Vector3f(-0.5f, 0, -0.5f), new Vector3f(0, 1, 0));
//        cam.update();

//        Camera camTop = display.getRenderer().createCamera(display.getWidth(),
//                     display.getHeight());
//
//        camTop.setFrustum(1.0f, 1000.0f, -0.55f, 0.55f, 0.4125f, -0.4125f);
//        Vector3f loc = new Vector3f(0.0f, 0.0f, 0.0f);
//        Vector3f left = new Vector3f(-1.0f, 0.0f, 0.0f);
//        Vector3f up = new Vector3f(0.0f, 1.0f, 0.0f);
//        Vector3f dir = new Vector3f(0.0f, 0f, -1.0f);
//        camTop.setFrame(loc, left, up, dir);
//
//        camTop.setLocation(new Vector3f(-0.1f, 10.0f, -0.1f));
//        camTop.lookAt(new Vector3f(0.0f, 0.0f, 0.0f), new Vector3f(0, 1, 0));
//
//        camTop.update();