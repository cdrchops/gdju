LoadingManager
    private LoadingManager() {}
    private static Map<String, LoadingObject> loaderMap = new LinkedHashMap<String, LoadingObject>();
    public void runLoader(String name)
    public void runLoader(String name, URL imagePath)
    public void runLoader(String name, URL imagePath, URL img2)
    public void runLoader(String name,
                          TextureDefinition background,
                          TextureDefinition border,
                          TextureDefinition overlay)
    public void checkState(String name)
    public void addLoader(LoadingObject lo)
    public boolean isFinishedLoading(String name)

Progress
    percentages, etc

LoadingObject
    Runnable primary
    Runnable secondary
    Thread primaryThread
    Thread secondaryThread
    boolean doneLoading
    StandardGameState gameState

StandaloneLoader
    private static final DisplaySystem display = DisplaySystem.getDisplaySystem();
    protected Node rootNode;
    protected Text2D statusText;
    protected Quad progressBar;
    protected Text2D percentageText;
    protected ColorRGBA color;
    protected AlphaState alphaState;

    private int steps = 100;
    private int current = 0;

    private static final float MAXIMUM = 100f;
    private Node hudNode = new Node("hudNode");
    private Quad gauge;

    private int textureWidth = 182;
    private int textureHeight = 24;
    private float xLoc = 0;
    private float yLoc = textureHeight;
    private Thread secondaryThread;
    private Thread primaryThread;
    private Runnable primary = new LoaderThread();
    private Runnable runner;

LoadingStatus
    private String display;
    private int range;

BasicLoadingGameState
    public Node rootNode;
    protected Text2D statusText;
    protected Quad progressBar;
    protected Text2D percentageText;
    protected ColorRGBA color;
    protected AlphaState alphaState;

    private int steps;
    private int current;

    private static final float MAXIMUM = 100f;
    private Node hudNode = new Node("hudNode");
    private Quad gauge;

    private int textureWidth = 182;
    private int textureHeight = 24;
    private float xLoc = 0;
    private float yLoc = textureHeight;

TextureDefinition
    private FloatBuffer textureCoords;
    private TextureState textureState;

    private float xLoc;
    private float yLoc;

TextureObject

work with regular Loader and new Loader definitions